// Code generated by MockGen. DO NOT EDIT.
// Source: client/rpc_client.go

// Package mock_client is a generated GoMock package.
package client

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockRpcClientI is a mock of RpcClientI interface.
type MockRpcClientI struct {
	ctrl     *gomock.Controller
	recorder *MockRpcClientIMockRecorder
}

// MockRpcClientIMockRecorder is the mock recorder for MockRpcClientI.
type MockRpcClientIMockRecorder struct {
	mock *MockRpcClientI
}

// NewMockRpcClientI creates a new mock instance.
func NewMockRpcClientI(ctrl *gomock.Controller) *MockRpcClientI {
	mock := &MockRpcClientI{ctrl: ctrl}
	mock.recorder = &MockRpcClientIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRpcClientI) EXPECT() *MockRpcClientIMockRecorder {
	return m.recorder
}

// EthSyncing mocks base method.
func (m *MockRpcClientI) EthSyncing() (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EthSyncing")
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EthSyncing indicates an expected call of EthSyncing.
func (mr *MockRpcClientIMockRecorder) EthSyncing() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EthSyncing", reflect.TypeOf((*MockRpcClientI)(nil).EthSyncing))
}

// GetAccountBalance mocks base method.
func (m *MockRpcClientI) GetAccountBalance(address string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountBalance", address)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountBalance indicates an expected call of GetAccountBalance.
func (mr *MockRpcClientIMockRecorder) GetAccountBalance(address interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountBalance", reflect.TypeOf((*MockRpcClientI)(nil).GetAccountBalance), address)
}
